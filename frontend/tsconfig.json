{
  "compilerOptions": {
    "target": "ESNext", // Common to use uppercase for newer targets
    "useDefineForClassFields": true, // Recommended by Vite for new projects
    "lib": [
      "DOM",
      "DOM.Iterable",
      "ESNext"
    ],
    "allowJs": false,
    "skipLibCheck": true,
    "esModuleInterop": true, // Enables allowSyntheticDefaultImports
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "module": "ESNext",
    // "moduleResolution": "node", // Vite works well with "bundler" or "node"
    "moduleResolution": "bundler", // Recommended for Vite with modern TypeScript
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    // Path Aliases for TypeScript
    "baseUrl": ".", // Base directory for path resolution
    "paths": {
      "@/*": [
        "src/*"
      ],
      "@assets/*": [
        "src/assets/*"
      ]
      // Add more aliases here if you create them in vite.config.ts
      // e.g., "@components/*": ["src/components/*"]
    },
    // TypeRoots are usually automatically discovered from node_modules/@types
    // Explicitly listing it is fine but often not necessary.
    // "typeRoots": ["./node_modules/@types"]
  },
  "include": [
    "src", // Include all files in the src directory
    "vite.config.ts", // Include Vite config for better TS support if it uses TS features directly
    // Ensure your asset type declaration file is listed if not broadly included by "src"
    // If assets.d.ts is directly in src, "src" above covers it.
    // If it's elsewhere, like `src/types/assets.d.ts`, ensure that path is covered.
    // The line below assumes it's `src/assets.d.ts`
    "src/assets.d.ts"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ] // Recommended by Vite for new projects
}